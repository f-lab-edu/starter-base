// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// 사용자 역할
enum UserRole {
  USER
  ADMIN

  @@map(name: "user_role")
}

/// 사용자
model User {
  id         Int      @id @default(autoincrement())
  nickname   String   @unique @db.VarChar(12)
  email      String   @unique @db.VarChar(254)
  password   String   @db.VarChar(128)
  role       UserRole @default(USER)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Project Project[]

  @@map(name: "user")
}

/// 프로젝트 카테고리
model ProjectCategory {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(12)

  Project Project[]

  @@map(name: "project_category")
}

/// 프로젝트 상태
enum ProjectStatus {
  REVIEW_PENDING /// 심사 대기
  REVIEW_PASSED /// 심사 통과
  REVIEW_FAILED /// 심사 불통과
  PROJECT_CANCELED /// 프로젝트 취소
  FUNDING_OPENED /// 펀딩 오픈(진행중)
  FUNDING_SUCCESS /// 펀딩 성사
  FUNDING_FAILURE /// 펀딩 무산
  FUNDING_CANCELED /// 펀딩 취소
  SETTLEMENT_COMPLETED /// 정산 완료
  PROJECT_HALTED /// 프로젝트 중단

  @@map(name: "project_status")
}

/// 프로젝트
model Project {
  id               Int           @id @default(autoincrement())
  status           ProjectStatus /// 상태
  title            String        @db.VarChar(32) /// 제목
  summary          String        @db.VarChar(50) /// 요약
  description      String        @db.MediumText /// 마크다운 형식 프로젝트 설명
  thumbnail_url    String        @db.VarChar(2000) /// 대표 이미지 url
  target_amount    BigInt        @db.BigInt /// 목표 금액
  collected_amount BigInt        @db.BigInt /// 모인 금액
  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt

  created_by    User            @relation(fields: [created_by_id], references: [id]) /// 창작자
  created_by_id Int
  category      ProjectCategory @relation(fields: [category_id], references: [id]) /// 카테고리
  category_id   Int

  ProjectSchedule ProjectSchedule[] /// 스케줄(일정)
  ProjectReword   ProjectReword[]

  @@map(name: "project")
}

/// 프로젝트 스케줄 타입 enum
enum ProjectScheduleType {
  FUNDING_START_DATE /// 펀딩 시작일
  FUNDING_DUE_DATE /// 펀딩 마감일
  PAYMENT_DUE_DATE /// 결제 마감일
  PAYMENT_SETTLEMENT_DATE /// 정산일

  @@map(name: "project_schedule_type")
}

/// 프로젝트 스케줄
model ProjectSchedule {
  id         Int                 @id @default(autoincrement())
  type       ProjectScheduleType
  created_at DateTime            @default(now())
  updated_at DateTime            @updatedAt

  project    Project @relation(fields: [project_id], references: [id]) /// 프로젝트
  project_id Int

  @@map(name: "project_schedule")
}

/// 프로젝트 선물
model ProjectReword {
  id                     Int      @id @default(autoincrement())
  title                  String   @db.VarChar(50) /// 제목
  description            String   @db.VarChar(200) /// 설명
  amount                 Int /// 금액
  limit                  Int /// 후원 가능 수량
  expected_delivery_date DateTime /// 예상 수령가능 날짜
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt

  project    Project @relation(fields: [project_id], references: [id]) /// 프로젝트
  project_id Int

  @@map(name: "project_reword")
}
